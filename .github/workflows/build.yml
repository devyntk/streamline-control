name: Build
on:
  push:
  pull_request:
  release:
    types: created

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cargo Cache
        uses: Swatinem/rust-cache@v1

      - name: Yarn Cache
        uses: actions/cache@v2.1.4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/frontend/yarn.lock') }}

      - name: Install dependencies
        run: |
              sudo apt update
              sudo apt install gtk+3.0 libpango1.0-dev libatk1.0-dev libgtk-3-dev libssl1.0-dev -y

      - name: Install Cargo-Make
        uses: davidB/rust-cargo-make@v1.4.2

      - name: Install Wasm-Pack
        uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          version: latest
          use-tool-cache: true

      - name: Build
        run: cargo make build

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          path: target/release/streamline-control
          name: streamline-control-linux

      - name: Get release
        if: ${{ github.event_name == 'release' }}
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        if: ${{ github.event_name == 'release' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: target/release/streamline-control
          asset_name: streamline-control-linux
          asset_content_type: application/octet-stream


  mac:
    runs-on: macos-latest
    steps:
        - uses: actions/checkout@v2

        - name: Cargo Cache
          uses: Swatinem/rust-cache@v1

        - name: Yarn Cache
          uses: actions/cache@v2.1.4
          with:
            path: frontend/node_modules
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/frontend/yarn.lock') }}

        - name: Install Cargo-Make
          uses: davidB/rust-cargo-make@v1.4.2

        - name: Install Wasm-Pack
          uses: actions-rs/install@v0.1
          with:
            crate: wasm-pack
            version: latest
            use-tool-cache: true

        - name: Install Cargo-Bundle
          uses: actions-rs/install@v0.1
          with:
            crate: cargo-bundle
            version: latest
            use-tool-cache: true

        - name: Build
          run: cargo make build

        - name: Zip App
          run: mv "target/release/bundle/osx/Streamline Control.app" . && zip -r streamline-control-mac.zip "Streamline Control.app"

        - name: Upload binary
          uses: actions/upload-artifact@v2
          with:
            path: streamline-control-mac.zip
            name: streamline-control-mac.zip

        - name: Get release
          if: ${{ github.event_name == 'release' }}
          id: get_release
          uses: bruceadams/get-release@v1.2.2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Upload Release Asset
          if: ${{ github.event_name == 'release' }}
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.get_release.outputs.upload_url }}
            asset_path: streamline-control-mac.zip
            asset_name: streamline-control-mac.zip
            asset_content_type: application/octet-stream

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cargo Cache
        uses: Swatinem/rust-cache@v1

      - name: Yarn Cache
        uses: actions/cache@v2.1.4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/frontend/yarn.lock') }}

      - name: Install dependencies
        run: |
          curl --url https://win.rustup.rs/x86_64 --output rustup-init.exe
          .\rustup-init.exe -y -t wasm32-unknown-unknown --default-toolchain stable-x86_64-pc-windows-msvc
          RefreshEnv

      - name: Install Cargo-Make
        uses: davidB/rust-cargo-make@v1.4.2

      - name: Install Wasm-Pack
        uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          version: latest
          use-tool-cache: true

      - name: Build release
        run: cargo make build

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          path: target/release/streamline-control.exe
          name: streamline-control.exe

      - name: Get release
        if: ${{ github.event_name == 'release' }}
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        if: ${{ github.event_name == 'release' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: target/release/streamline-control.exe
          asset_name: streamline-control.exe
          asset_content_type: application/octet-stream
